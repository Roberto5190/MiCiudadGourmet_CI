name: Laravel CI – MySQL & ParaTest

on:
  push:    { branches: [main] }
  pull_request: { branches: [main] }

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ci_test
          MYSQL_USER: laravel
          MYSQL_PASSWORD: secret
        ports: [3306:3306]
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: ci_test
      DB_USERNAME: laravel
      DB_PASSWORD: secret
      # Activa o desactiva los tests paralelos
      APP_PARALLEL_TESTING: "true"

    steps:
    - uses: actions/checkout@v4

    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, pdo_mysql
        coverage: none

    # Cache Composer
    - name: Composer cache dir
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >>$GITHUB_OUTPUT

    - uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    # Dependencias
    - run: composer install --prefer-dist --no-interaction --no-progress

    # ➜  Instalar ParaTest 7.x (solo primera vez; cacheará después)
    - name: Install ParaTest
      run: composer require --dev brianium/paratest:^7 --update-with-dependencies

    # Preparar la app
    - run: cp .env.example .env
    - run: php artisan key:generate

    # Esperar MySQL
    - run: |
        until mysql -h 127.0.0.1 -u laravel -psecret -e "SELECT 1"; do
          sleep 1
        done

    # Migrar y poblar
    - run: php artisan migrate --seed --no-interaction --force

    # Tests (paralelos si la var = true)
    - name: Run tests
      run: |
        if [ "$APP_PARALLEL_TESTING" = "true" ]; then
          php artisan test --parallel
        else
          php artisan test
        fi
