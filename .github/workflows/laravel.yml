name: Laravel CI (SQLite)

on:
  push:          { branches: [main] }
  pull_request:  { branches: [main] }

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    # 1) Clonar el código
    - uses: actions/checkout@v4                        # GitHub Actions oficial :contentReference[oaicite:1]{index=1}

    # 2) Configurar PHP 8.2 con SQLite
    - uses: shivammathur/setup-php@v2                 # Acción recomendada por Laravel News :contentReference[oaicite:2]{index=2}
      with:
        php-version: '8.2'
        extensions: pdo, sqlite

    # 3) Instalar dependencias
    - name: Install Composer dependencies
      run: composer install --prefer-dist --no-interaction --no-progress   # Patrón del starter-workflow :contentReference[oaicite:3]{index=3}

    # 4) Preparar el entorno
    - name: Copy .env
      run: cp .env.example .env
    - name: Generate APP_KEY
      run: php artisan key:generate                                        # Paso típico en docs y tutos :contentReference[oaicite:4]{index=4}

    # 5) Crear la BD SQLite y migrar
    - name: Prepare database
      run: |
        mkdir -p database
        touch database/database.sqlite       # truco clásico para SQLite en CI :contentReference[oaicite:5]{index=5}
        php artisan migrate --seed --no-interaction

    # 6) Ejecutar la suite de tests
    - name: Run PHPUnit tests
      env:
        DB_CONNECTION: sqlite                # Forzar conexión testing
        DB_DATABASE: database/database.sqlite
      run: php artisan test                  # Sin --parallel → no necesita ParaTest


    # 8) Tests (sin --parallel ⇒ no necesita ParaTest)
    - name: Ejecutar tests
      run: php artisan test
