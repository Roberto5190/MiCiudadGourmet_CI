name: Laravel CI – MySQL

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    runs-on: ubuntu-latest

    # ————————————————————————
    # 1) Contenedor de MySQL 8
    # ————————————————————————
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ci_test
          MYSQL_USER: laravel
          MYSQL_PASSWORD: secret
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    # Variables disponibles para todos los pasos
    env:
      APP_ENV: testing
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: ci_test
      DB_USERNAME: laravel
      DB_PASSWORD: secret

    steps:
    # 2) Descarga del código
    - uses: actions/checkout@v4

    # 3) PHP 8.2 + extensiones
    - uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, bcmath, pdo_mysql
        coverage: none

    # 4) Cache de dependencias Composer
    - name: Obtener directorio de cache
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache Composer
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    # 5) Instalación de dependencias
    - name: Instalar dependencias PHP
      run: composer install --prefer-dist --no-interaction --no-progress

    # 6) Preparar la aplicación
    - name: Copiar .env
      run: cp .env.example .env

    - name: Generar APP_KEY
      run: php artisan key:generate

    # 7) Esperar a que MySQL esté listo
    - name: Esperar MySQL
      run: |
        until mysql -h 127.0.0.1 -u laravel -psecret -e "SELECT 1"; do
          sleep 1
        done

    # 8) Migraciones y seeders
    - name: Migrar base de datos
      run: php artisan migrate --seed --no-interaction --force

    # 9) Ejecutar tests (paralelos opcional)
    - name: Ejecutar tests
      run: php artisan test --parallel
